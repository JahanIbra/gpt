version: '3.8'

services:
  bot:
    build: .
    container_name: islamic_bot
    restart: unless-stopped
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./.env:/app/.env
    environment:
      - APP_ENV=production
      - LOG_LEVEL=INFO
      - DB_PATH=/app/data/bot.db
      - MISTRAL_MODEL_PATH=/app/models/mistral-7b-instruct-v0.3.Q4_K_M.gguf
      - PYTHONPATH=/app
    healthcheck:
      test: ["CMD", "python", "-c", "import sqlite3; sqlite3.connect('/app/data/bot.db').close()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G

  redis:
    image: redis:alpine
    container_name: bot_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Опционально: добавляем PostgreSQL для масштабирования
  db:
    image: postgres:14-alpine
    container_name: bot_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=bot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
  postgres_data:
